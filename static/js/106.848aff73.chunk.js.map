{"version":3,"file":"static/js/106.848aff73.chunk.js","mappings":"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","sources":["components/MovieDetails.jsx"],"sourcesContent":["import { Suspense, useRef, useState } from 'react';\nimport { useEffect } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getQuery } from 'services/fetch';\nimport styled from 'styled-components';\nimport defaultImg from '../images/noPoster.webp';\nimport { PreLoader } from './PreLoader';\n\nconst StyledNavLink = styled(NavLink)`\n  color: black;\n\n  &.active {\n    color: orange;\n  }\n`;\n\n// Сторінка з детальною інформацією про фільм\nconst MovieDetails = () => {\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n\n  const { currentMovie } = useParams(); // забираю ID фільму з адресного рядку браузера\n  const URL_QUERY_OPTIONS = `movie/${currentMovie}`; // рядок запиту згідно з API\n  const [currentMovieResp, setCurrentMovieResp] = useState({});\n\n  const location = useLocation();\n  // console.log('MovieDetails >> location:', location);\n\n  const backLinkLocationRef = useRef(location.state ?? '/movies'); // якщо немає location.state (відкрили в новій вкладці), то повернення буде на стартову сторінку\n  // console.log('MovieDetails >> backLinkLocationRef:', backLinkLocationRef);\n\n  useEffect(() => {\n    getQuery(URL_QUERY_OPTIONS)\n      .then(response => {\n        // console.log('response', response);\n        setCurrentMovieResp(response);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [URL_QUERY_OPTIONS]);\n\n  if (status === 'rejected') {\n    // console.log(error.message);\n    return (\n      <>\n        <h2>{`Помилка: ${error.message}`}</h2>\n        <Link to={backLinkLocationRef.current}>\n          <p>Повернутись назад</p>\n        </Link>\n      </>\n    );\n  }\n  const {\n    original_title,\n    poster_path,\n    overview,\n    release_date,\n    production_countries,\n    original_language,\n    runtime,\n    vote_average,\n    vote_count,\n    homepage,\n    genres,\n  } = currentMovieResp;\n\n  // Щоб заглушка-зображення не блимала при оновленні сторінки, рендерю лише коли об'єкт не пустий\n  return (\n    <>\n      {Object.keys(currentMovieResp).length !== 0 && (\n        <div>\n          <h1>Details of \"{original_title}\" movie</h1>\n          <Link to={backLinkLocationRef.current}>\n            <p>Повернутись назад</p>\n          </Link>\n\n          <div className=\"card\" style={{ width: '38rem' }}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultImg\n              }\n              className=\"card-img-top\"\n              alt=\"...\"\n              style={{\n                height: '100%',\n                width: '100%',\n              }}\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{original_title}</h5>\n              <p>{overview ? overview : 'No review'}</p>\n\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                }}\n              >\n                <p>\n                  Genres:{' '}\n                  <strong>\n                    {genres.length === 0 ? (\n                      <span>Unknown genres</span>\n                    ) : (\n                      genres\n                        .map(genre => {\n                          return `${genre.name}`;\n                        })\n                        .join(', ')\n                    )}\n                  </strong>\n                </p>\n\n                <h4>\n                  <strong>Release date:</strong>\n                  <p style={{ margin: 0 }}>{release_date}</p>\n                </h4>\n\n                <p style={{ marginBottom: '5px' }}>\n                  Original country:{' '}\n                  <strong>\n                    {production_countries.length !== 0\n                      ? production_countries[0]?.iso_3166_1.toUpperCase()\n                      : 'No data'}\n                  </strong>\n                </p>\n\n                <p style={{ marginBottom: '5px' }}>\n                  Original language:{' '}\n                  <strong>{original_language.toUpperCase()}</strong>\n                </p>\n                <p style={{ marginBottom: '5px' }}>\n                  Runtime: <strong>{runtime}min</strong>\n                </p>\n                <p>\n                  <strong>Rating:</strong> <br />\n                  <span>\n                    Average vote: <strong>{vote_average}</strong>\n                  </span>\n                  <br />\n                  <span>\n                    Total votes: <strong>{vote_count}</strong>\n                  </span>\n                </p>\n              </div>\n\n              <Link\n                to={homepage ? homepage : '*'}\n                className=\"btn btn-primary\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Go to the movie page\n              </Link>\n            </div>\n          </div>\n\n          <ul>\n            <li>\n              <StyledNavLink to=\"cast\">to movie's cast</StyledNavLink>\n            </li>\n            <li>\n              <StyledNavLink to=\"reviews\">to movie's reviews</StyledNavLink>\n            </li>\n          </ul>\n        </div>\n      )}\n      <Suspense fallback={<PreLoader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledNavLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","_location$state","_production_countries","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","status","setStatus","currentMovie","useParams","URL_QUERY_OPTIONS","concat","_useState5","_useState6","currentMovieResp","setCurrentMovieResp","location","useLocation","backLinkLocationRef","useRef","state","useEffect","getQuery","then","response","catch","_jsxs","_Fragment","children","_jsx","message","Link","to","current","original_title","poster_path","overview","release_date","production_countries","original_language","runtime","vote_average","vote_count","homepage","genres","Object","keys","length","className","style","width","src","defaultImg","alt","height","display","flexDirection","map","genre","name","join","margin","marginBottom","iso_3166_1","toUpperCase","target","rel","Suspense","fallback","PreLoader","Outlet"],"sourceRoot":""}