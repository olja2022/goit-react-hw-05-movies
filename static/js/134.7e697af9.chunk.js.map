{"version":3,"file":"static/js/134.7e697af9.chunk.js","mappings":"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","sources":["pages/Movies.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getQuery } from 'services/fetch';\nimport defaultImg from '../images/noPoster.webp';\n\nconst URL_QUERY_OPTIONS = `search/movie`; \nconst Movies = () => {\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams({}); \n  const movieName = searchParams.get('query') ?? ''; \n  const [foundMovies, setFoundMovies] = useState([]); \n\n  useEffect(() => {\n    getQuery(URL_QUERY_OPTIONS, searchParams)\n      .then(response => {\n        setFoundMovies(response.results);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [searchParams]);\n\n  \n  const location = useLocation();\n  const updateInputSearch = ({ target: { value } }) => {\n    const searchObj = value === '' ? {} : { query: value }; \n    setSearchParams(searchObj);\n  };\n\n  if (status === 'rejected') {\n    return <h2>{`Помилка: ${error.message}`}</h2>;\n  }\n\n  return (\n    <>\n      <h2\n        style={{\n          marginTop: '20px',\n        }}\n      >\n        It is the Movie Page\n      </h2>\n      <h3>Here you can search movies</h3>\n      <h4\n        style={{\n          marginBottom: '20px',\n        }}\n      >\n        Start enter movie name below\n      </h4>\n      <input type=\"text\" onChange={updateInputSearch} value={movieName} />\n\n      {foundMovies.length !== 0 && (\n        <div className=\"accordion\" id=\"accordionExample\">\n          {foundMovies.map(\n            ({\n              id,\n              title,\n              poster_path,\n              release_date,\n              original_language,\n              vote_average,\n              vote_count,\n              overview,\n            }) => {\n              return (\n                <div key={id}>\n                  <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\">\n                      <button\n                        className=\"accordion-button collapsed\"\n                        type=\"button\"\n                        data-bs-toggle=\"collapse\"\n                        data-bs-target={`#collapseTwo-${id}`}\n                        aria-expanded=\"false\"\n                        aria-controls={`collapseTwo-${id}`}\n                        style={{ fontSize: '1.2rem' }}\n                      >\n                        Movie title: &nbsp;\n                        <strong> {`${title}`} </strong>\n                      </button>\n                    </h2>\n                    <div\n                      id={`collapseTwo-${id}`}\n                      className=\"accordion-collapse collapse\"\n                      data-bs-parent=\"#accordionExample\"\n                    >\n                      <div\n                        className=\"accordion-body\"\n                        style={{\n                          width: '100%',\n                          display: 'flex',\n                        }}\n                      >\n                        <img\n                          src={\n                            poster_path\n                              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                              : defaultImg\n                          }\n                          className=\"card-img-top\"\n                          alt=\"...\"\n                          style={{\n                            minWidth: '200px',\n                            maxWidth: '200px',\n                            height: '100%',\n                            marginRight: '20px',\n                          }}\n                        />\n                        <div\n                          style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                          }}\n                        >\n                          <h4>\n                            <strong>Release date:</strong>\n                            <p style={{ margin: 0 }}>{release_date}</p>\n                          </h4>\n\n                          <p style={{ marginBottom: '5px' }}>\n                            Original language:\n                            <strong>{original_language.toUpperCase()}</strong>\n                          </p>\n\n                          <p>\n                            <strong>Rating:</strong> <br />\n                            <span>\n                              Average vote: <strong>{vote_average}</strong>\n                            </span>\n                            <br />\n                            <span>\n                              Total votes: <strong> {vote_count}</strong>\n                            </span>\n                          </p>\n\n                          <h5>\n                            <strong>Overview: </strong>\n                            <p style={{ fontSize: '1rem' }}>\n                              {overview ? overview : 'No review'}\n                            </p>\n                          </h5>\n\n                          <Link\n                            to={`${id}`}\n                            className=\"btn btn-primary\"\n                            state={location}\n                          >\n                            See more movie's details\n                          </Link>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            }\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["_searchParams$get","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","status","setStatus","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","_useState5","_useState6","foundMovies","setFoundMovies","useEffect","getQuery","then","response","results","catch","location","useLocation","_jsx","children","concat","message","_jsxs","_Fragment","style","marginTop","marginBottom","type","onChange","_ref","value","target","query","length","className","id","map","_ref2","title","poster_path","release_date","original_language","vote_average","vote_count","overview","fontSize","width","display","src","defaultImg","alt","minWidth","maxWidth","height","marginRight","flexDirection","margin","toUpperCase","Link","to","state"],"sourceRoot":""}